<testsuites>
  <testsuite tests="1" failures="0" time="0.000" name="SDK contract tests: data store">
    <properties>
      <property name="tests.service.info" value="{&#34;capabilities&#34;:[&#34;server-side&#34;,&#34;strongly-typed&#34;,&#34;all-flags-client-side-only&#34;,&#34;all-flags-details-only-for-tracked-flags&#34;,&#34;all-flags-with-reasons&#34;]}"></property>
      <property name="tests.filter.mustMatch" value="&#34;events&#34;"></property>
      <property name="tests.filter.mustNotMatch" value=""></property>
    </properties>
    <testcase classname="" name="data store" time="0.000">
      <skipped message="excluded by filter parameters"></skipped>
    </testcase>
  </testsuite>
  <testsuite tests="1" failures="0" time="0.000" name="SDK contract tests: evaluation">
    <properties>
      <property name="tests.service.info" value="{&#34;capabilities&#34;:[&#34;server-side&#34;,&#34;strongly-typed&#34;,&#34;all-flags-client-side-only&#34;,&#34;all-flags-details-only-for-tracked-flags&#34;,&#34;all-flags-with-reasons&#34;]}"></property>
      <property name="tests.filter.mustMatch" value="&#34;events&#34;"></property>
      <property name="tests.filter.mustNotMatch" value=""></property>
    </properties>
    <testcase classname="" name="evaluation" time="0.000">
      <skipped message="excluded by filter parameters"></skipped>
    </testcase>
  </testsuite>
  <testsuite tests="163" failures="7" time="1.537" name="SDK contract tests: events">
    <properties>
      <property name="tests.service.info" value="{&#34;capabilities&#34;:[&#34;server-side&#34;,&#34;strongly-typed&#34;,&#34;all-flags-client-side-only&#34;,&#34;all-flags-details-only-for-tracked-flags&#34;,&#34;all-flags-with-reasons&#34;]}"></property>
      <property name="tests.filter.mustMatch" value="&#34;events&#34;"></property>
      <property name="tests.filter.mustNotMatch" value=""></property>
    </properties>
    <testcase classname="" name="events" time="0.467"></testcase>
    <testcase classname="" name="events/summary events" time="0.081"></testcase>
    <testcase classname="" name="events/summary events/basic counter behavior" time="0.026"></testcase>
    <testcase classname="" name="events/summary events/unknown flag" time="0.005"></testcase>
    <testcase classname="" name="events/summary events/reset after each flush" time="0.012"></testcase>
    <testcase classname="" name="events/summary events/prerequisites" time="0.008"></testcase>
    <testcase classname="" name="events/summary events/flag versions" time="0.030"></testcase>
    <testcase classname="" name="events/feature events" time="0.036"></testcase>
    <testcase classname="" name="events/feature events/only index + summary event for untracked flag" time="0.010"></testcase>
    <testcase classname="" name="events/feature events/only index + summary event for untracked flag/type: bool" time="0.002"></testcase>
    <testcase classname="" name="events/feature events/only index + summary event for untracked flag/type: int" time="0.001"></testcase>
    <testcase classname="" name="events/feature events/only index + summary event for untracked flag/type: double" time="0.003"></testcase>
    <testcase classname="" name="events/feature events/only index + summary event for untracked flag/type: string" time="0.001"></testcase>
    <testcase classname="" name="events/feature events/only index + summary event for untracked flag/type: any" time="0.001"></testcase>
    <testcase classname="" name="events/feature events/full feature event for tracked flag, without reason" time="0.006"></testcase>
    <testcase classname="" name="events/feature events/full feature event for tracked flag, without reason/type: bool" time="0.001"></testcase>
    <testcase classname="" name="events/feature events/full feature event for tracked flag, without reason/type: int" time="0.001"></testcase>
    <testcase classname="" name="events/feature events/full feature event for tracked flag, without reason/type: double" time="0.001"></testcase>
    <testcase classname="" name="events/feature events/full feature event for tracked flag, without reason/type: string" time="0.001"></testcase>
    <testcase classname="" name="events/feature events/full feature event for tracked flag, without reason/type: any" time="0.001"></testcase>
    <testcase classname="" name="events/feature events/full feature event for tracked flag, with reason" time="0.006"></testcase>
    <testcase classname="" name="events/feature events/full feature event for tracked flag, with reason/type: bool" time="0.001"></testcase>
    <testcase classname="" name="events/feature events/full feature event for tracked flag, with reason/type: int" time="0.001"></testcase>
    <testcase classname="" name="events/feature events/full feature event for tracked flag, with reason/type: double" time="0.001"></testcase>
    <testcase classname="" name="events/feature events/full feature event for tracked flag, with reason/type: string" time="0.001"></testcase>
    <testcase classname="" name="events/feature events/full feature event for tracked flag, with reason/type: any" time="0.001"></testcase>
    <testcase classname="" name="events/feature events/full feature event for failed tracked flag, with reason" time="0.005"></testcase>
    <testcase classname="" name="events/feature events/full feature event for failed tracked flag, with reason/type: bool" time="0.001"></testcase>
    <testcase classname="" name="events/feature events/full feature event for failed tracked flag, with reason/type: int" time="0.001"></testcase>
    <testcase classname="" name="events/feature events/full feature event for failed tracked flag, with reason/type: double" time="0.001"></testcase>
    <testcase classname="" name="events/feature events/full feature event for failed tracked flag, with reason/type: string" time="0.001"></testcase>
    <testcase classname="" name="events/feature events/full feature event for failed tracked flag, with reason/type: any" time="0.001"></testcase>
    <testcase classname="" name="events/feature prerequisite events" time="0.016"></testcase>
    <testcase classname="" name="events/feature prerequisite events/without reason" time="0.007">
      <failure message="no items were found to match: (event JSON equal to {&#34;default&#34;:null,&#34;key&#34;:&#34;flag2&#34;,&#34;kind&#34;:&#34;feature&#34;,&#34;prereqOf&#34;:&#34;flag1&#34;,&#34;reason&#34;:null,&#34;user&#34;:null,&#34;userKey&#34;:&#34;user-key&#34;,&#34;value&#34;:&#34;ok2&#34;,&#34;variation&#34;:2,&#34;version&#34;:0}), (event JSON equal to {&#34;default&#34;:null,&#34;key&#34;:&#34;flag3&#34;,&#34;kind&#34;:&#34;feature&#34;,&#34;prereqOf&#34;:&#34;flag2&#34;,&#34;reason&#34;:null,&#34;user&#34;:null,&#34;userKey&#34;:&#34;user-key&#34;,&#34;value&#34;:&#34;ok3&#34;,&#34;variation&#34;:3,&#34;version&#34;:0})&#xA;full value was: [{&#34;creationDate&#34;:1643052851395,&#34;kind&#34;:&#34;index&#34;,&#34;user&#34;:{&#34;key&#34;:&#34;user-key&#34;}}, {&#34;creationDate&#34;:1643052851395,&#34;key&#34;:&#34;flag3&#34;,&#34;kind&#34;:&#34;feature&#34;,&#34;prereqOf&#34;:&#34;flag2&#34;,&#34;userKey&#34;:&#34;user-key&#34;,&#34;value&#34;:&#34;ok3&#34;,&#34;variation&#34;:3,&#34;version&#34;:0}, {&#34;creationDate&#34;:1643052851395,&#34;key&#34;:&#34;flag2&#34;,&#34;kind&#34;:&#34;feature&#34;,&#34;prereqOf&#34;:&#34;flag1&#34;,&#34;userKey&#34;:&#34;user-key&#34;,&#34;value&#34;:&#34;ok2&#34;,&#34;variation&#34;:2,&#34;version&#34;:0}, {&#34;creationDate&#34;:1643052851395,&#34;default&#34;:&#34;default&#34;,&#34;key&#34;:&#34;flag1&#34;,&#34;kind&#34;:&#34;feature&#34;,&#34;userKey&#34;:&#34;user-key&#34;,&#34;value&#34;:&#34;value1&#34;,&#34;variation&#34;:1,&#34;version&#34;:0}, {&#34;endDate&#34;:1643052851395,&#34;features&#34;:{&#34;flag1&#34;:{&#34;counters&#34;:[{&#34;count&#34;:1,&#34;value&#34;:&#34;value1&#34;,&#34;variation&#34;:1,&#34;version&#34;:0}],&#34;default&#34;:&#34;default&#34;},&#34;flag2&#34;:{&#34;counters&#34;:[{&#34;count&#34;:1,&#34;value&#34;:&#34;ok2&#34;,&#34;variation&#34;:2,&#34;version&#34;:0}]},&#34;flag3&#34;:{&#34;counters&#34;:[{&#34;count&#34;:1,&#34;value&#34;:&#34;ok3&#34;,&#34;variation&#34;:3,&#34;version&#34;:0}]}},&#34;kind&#34;:&#34;summary&#34;,&#34;startDate&#34;:1643052851395}]" type="">[2022-01-24 11:34:11.392] setting SDK data to: {&#34;flags&#34;:{&#34;flag1&#34;:{&#34;key&#34;:&#34;flag1&#34;,&#34;on&#34;:true,&#34;prerequisites&#34;:[{&#34;key&#34;:&#34;flag2&#34;,&#34;variation&#34;:2}],&#34;targets&#34;:[],&#34;rules&#34;:[],&#34;fallthrough&#34;:{&#34;variation&#34;:1},&#34;offVariation&#34;:0,&#34;variations&#34;:[&#34;a&#34;,&#34;value1&#34;],&#34;clientSide&#34;:false,&#34;salt&#34;:&#34;&#34;,&#34;trackEvents&#34;:true,&#34;trackEventsFallthrough&#34;:false,&#34;debugEventsUntilDate&#34;:null,&#34;version&#34;:0,&#34;deleted&#34;:false},&#34;flag2&#34;:{&#34;key&#34;:&#34;flag2&#34;,&#34;on&#34;:true,&#34;prerequisites&#34;:[{&#34;key&#34;:&#34;flag3&#34;,&#34;variation&#34;:3}],&#34;targets&#34;:[{&#34;variation&#34;:2,&#34;values&#34;:[&#34;user-key&#34;]}],&#34;rules&#34;:[],&#34;fallthrough&#34;:{&#34;variation&#34;:0},&#34;offVariation&#34;:0,&#34;variations&#34;:[&#34;a&#34;,&#34;b&#34;,&#34;ok2&#34;],&#34;clientSide&#34;:false,&#34;salt&#34;:&#34;&#34;,&#34;trackEvents&#34;:true,&#34;trackEventsFallthrough&#34;:false,&#34;debugEventsUntilDate&#34;:null,&#34;version&#34;:0,&#34;deleted&#34;:false},&#34;flag3&#34;:{&#34;key&#34;:&#34;flag3&#34;,&#34;on&#34;:true,&#34;prerequisites&#34;:[],&#34;targets&#34;:[],&#34;rules&#34;:[{&#34;variation&#34;:3,&#34;id&#34;:&#34;rule1&#34;,&#34;clauses&#34;:[{&#34;attribute&#34;:&#34;key&#34;,&#34;op&#34;:&#34;in&#34;,&#34;values&#34;:[&#34;user-key&#34;],&#34;negate&#34;:false}],&#34;trackEvents&#34;:false}],&#34;fallthrough&#34;:{&#34;variation&#34;:0},&#34;offVariation&#34;:0,&#34;variations&#34;:[&#34;a&#34;,&#34;b&#34;,&#34;c&#34;,&#34;ok3&#34;],&#34;clientSide&#34;:false,&#34;salt&#34;:&#34;&#34;,&#34;trackEvents&#34;:true,&#34;trackEventsFallthrough&#34;:false,&#34;debugEventsUntilDate&#34;:null,&#34;version&#34;:0,&#34;deleted&#34;:false}},&#34;segments&#34;:{}}&#xA;[2022-01-24 11:34:11.392] Creating test service entity (SDK client) with parameters: {&#34;configuration&#34;:{&#34;credential&#34;:&#34;test-sdk-key&#34;,&#34;streaming&#34;:{&#34;baseUri&#34;:&#34;http://localhost:8111/endpoints/13&#34;},&#34;events&#34;:{&#34;baseUri&#34;:&#34;http://localhost:8111/endpoints/14&#34;,&#34;capacity&#34;:null,&#34;enableDiagnostics&#34;:false,&#34;flushIntervalMs&#34;:1000000}},&#34;tag&#34;:&#34;events/feature prerequisite events/without reason&#34;}&#xA;[2022-01-24 11:34:11.395] sending put event with data: {&#34;data&#34;:{&#34;flags&#34;:{&#34;flag1&#34;:{&#34;key&#34;:&#34;flag1&#34;,&#34;on&#34;:true,&#34;prerequisites&#34;:[{&#34;key&#34;:&#34;flag2&#34;,&#34;variation&#34;:2}],&#34;targets&#34;:[],&#34;rules&#34;:[],&#34;fallthrough&#34;:{&#34;variation&#34;:1},&#34;offVariation&#34;:0,&#34;variations&#34;:[&#34;a&#34;,&#34;value1&#34;],&#34;clientSide&#34;:false,&#34;salt&#34;:&#34;&#34;,&#34;trackEvents&#34;:true,&#34;trackEventsFallthrough&#34;:false,&#34;debugEventsUntilDate&#34;:null,&#34;version&#34;:0,&#34;deleted&#34;:false},&#34;flag2&#34;:{&#34;key&#34;:&#34;flag2&#34;,&#34;on&#34;:true,&#34;prerequisites&#34;:[{&#34;key&#34;:&#34;flag3&#34;,&#34;variation&#34;:3}],&#34;targets&#34;:[{&#34;variation&#34;:2,&#34;values&#34;:[&#34;user-key&#34;]}],&#34;rules&#34;:[],&#34;fallthrough&#34;:{&#34;variation&#34;:0},&#34;offVariation&#34;:0,&#34;variations&#34;:[&#34;a&#34;,&#34;b&#34;,&#34;ok2&#34;],&#34;clientSide&#34;:false,&#34;salt&#34;:&#34;&#34;,&#34;trackEvents&#34;:true,&#34;trackEventsFallthrough&#34;:false,&#34;debugEventsUntilDate&#34;:null,&#34;version&#34;:0,&#34;deleted&#34;:false},&#34;flag3&#34;:{&#34;key&#34;:&#34;flag3&#34;,&#34;on&#34;:true,&#34;prerequisites&#34;:[],&#34;targets&#34;:[],&#34;rules&#34;:[{&#34;variation&#34;:3,&#34;id&#34;:&#34;rule1&#34;,&#34;clauses&#34;:[{&#34;attribute&#34;:&#34;key&#34;,&#34;op&#34;:&#34;in&#34;,&#34;values&#34;:[&#34;user-key&#34;],&#34;negate&#34;:false}],&#34;trackEvents&#34;:false}],&#34;fallthrough&#34;:{&#34;variation&#34;:0},&#34;offVariation&#34;:0,&#34;variations&#34;:[&#34;a&#34;,&#34;b&#34;,&#34;c&#34;,&#34;ok3&#34;],&#34;clientSide&#34;:false,&#34;salt&#34;:&#34;&#34;,&#34;trackEvents&#34;:true,&#34;trackEventsFallthrough&#34;:false,&#34;debugEventsUntilDate&#34;:null,&#34;version&#34;:0,&#34;deleted&#34;:false}},&#34;segments&#34;:{}}}&#xA;[2022-01-24 11:34:11.395] Sending command: {&#34;command&#34;:&#34;evaluate&#34;,&#34;evaluate&#34;:{&#34;flagKey&#34;:&#34;flag1&#34;,&#34;user&#34;:{&#34;key&#34;:&#34;user-key&#34;},&#34;valueType&#34;:&#34;string&#34;,&#34;defaultValue&#34;:&#34;default&#34;,&#34;detail&#34;:false}}&#xA;[2022-01-24 11:34:11.396] Response: {&#34;value&#34;:&#34;value1&#34;}&#xA;[2022-01-24 11:34:11.396] Sending command: {&#34;command&#34;:&#34;flushEvents&#34;}&#xA;[2022-01-24 11:34:11.396] received POST /bulk&#xA;[2022-01-24 11:34:11.397] received 5 events&#xA;[2022-01-24 11:34:11.397]     {&#34;creationDate&#34;:1643052851395,&#34;kind&#34;:&#34;index&#34;,&#34;user&#34;:{&#34;key&#34;:&#34;user-key&#34;}}&#xA;[2022-01-24 11:34:11.397]     {&#34;creationDate&#34;:1643052851395,&#34;key&#34;:&#34;flag3&#34;,&#34;kind&#34;:&#34;feature&#34;,&#34;prereqOf&#34;:&#34;flag2&#34;,&#34;userKey&#34;:&#34;user-key&#34;,&#34;value&#34;:&#34;ok3&#34;,&#34;variation&#34;:3,&#34;version&#34;:0}&#xA;[2022-01-24 11:34:11.397]     {&#34;creationDate&#34;:1643052851395,&#34;key&#34;:&#34;flag2&#34;,&#34;kind&#34;:&#34;feature&#34;,&#34;prereqOf&#34;:&#34;flag1&#34;,&#34;userKey&#34;:&#34;user-key&#34;,&#34;value&#34;:&#34;ok2&#34;,&#34;variation&#34;:2,&#34;version&#34;:0}&#xA;[2022-01-24 11:34:11.397]     {&#34;creationDate&#34;:1643052851395,&#34;default&#34;:&#34;default&#34;,&#34;key&#34;:&#34;flag1&#34;,&#34;kind&#34;:&#34;feature&#34;,&#34;userKey&#34;:&#34;user-key&#34;,&#34;value&#34;:&#34;value1&#34;,&#34;variation&#34;:1,&#34;version&#34;:0}&#xA;[2022-01-24 11:34:11.397]     {&#34;endDate&#34;:1643052851395,&#34;features&#34;:{&#34;flag1&#34;:{&#34;counters&#34;:[{&#34;count&#34;:1,&#34;value&#34;:&#34;value1&#34;,&#34;variation&#34;:1,&#34;version&#34;:0}],&#34;default&#34;:&#34;default&#34;},&#34;flag2&#34;:{&#34;counters&#34;:[{&#34;count&#34;:1,&#34;value&#34;:&#34;ok2&#34;,&#34;variation&#34;:2,&#34;version&#34;:0}]},&#34;flag3&#34;:{&#34;counters&#34;:[{&#34;count&#34;:1,&#34;value&#34;:&#34;ok3&#34;,&#34;variation&#34;:3,&#34;version&#34;:0}]}},&#34;kind&#34;:&#34;summary&#34;,&#34;startDate&#34;:1643052851395}&#xA;[2022-01-24 11:34:11.398] Closing http://localhost:8000/clients/615&#xA;[2022-01-24 11:34:11.398] End of stream request</failure>
    </testcase>
    <testcase classname="" name="events/feature prerequisite events/with reason" time="0.009">
      <failure message="no items were found to match: (event JSON equal to {&#34;default&#34;:null,&#34;key&#34;:&#34;flag2&#34;,&#34;kind&#34;:&#34;feature&#34;,&#34;prereqOf&#34;:&#34;flag1&#34;,&#34;reason&#34;:{&#34;kind&#34;:&#34;TARGET_MATCH&#34;},&#34;user&#34;:null,&#34;userKey&#34;:&#34;user-key&#34;,&#34;value&#34;:&#34;ok2&#34;,&#34;variation&#34;:2,&#34;version&#34;:0}), (event JSON equal to {&#34;default&#34;:null,&#34;key&#34;:&#34;flag3&#34;,&#34;kind&#34;:&#34;feature&#34;,&#34;prereqOf&#34;:&#34;flag2&#34;,&#34;reason&#34;:{&#34;kind&#34;:&#34;RULE_MATCH&#34;,&#34;ruleId&#34;:&#34;rule1&#34;,&#34;ruleIndex&#34;:0},&#34;user&#34;:null,&#34;userKey&#34;:&#34;user-key&#34;,&#34;value&#34;:&#34;ok3&#34;,&#34;variation&#34;:3,&#34;version&#34;:0})&#xA;full value was: [{&#34;creationDate&#34;:1643052851404,&#34;kind&#34;:&#34;index&#34;,&#34;user&#34;:{&#34;key&#34;:&#34;user-key&#34;}}, {&#34;creationDate&#34;:1643052851404,&#34;key&#34;:&#34;flag3&#34;,&#34;kind&#34;:&#34;feature&#34;,&#34;prereqOf&#34;:&#34;flag2&#34;,&#34;reason&#34;:{&#34;kind&#34;:&#34;RULE_MATCH&#34;,&#34;ruleId&#34;:&#34;rule1&#34;,&#34;ruleIndex&#34;:0},&#34;userKey&#34;:&#34;user-key&#34;,&#34;value&#34;:&#34;ok3&#34;,&#34;variation&#34;:3,&#34;version&#34;:0}, {&#34;creationDate&#34;:1643052851404,&#34;key&#34;:&#34;flag2&#34;,&#34;kind&#34;:&#34;feature&#34;,&#34;prereqOf&#34;:&#34;flag1&#34;,&#34;reason&#34;:{&#34;kind&#34;:&#34;TARGET_MATCH&#34;},&#34;userKey&#34;:&#34;user-key&#34;,&#34;value&#34;:&#34;ok2&#34;,&#34;variation&#34;:2,&#34;version&#34;:0}, {&#34;creationDate&#34;:1643052851404,&#34;default&#34;:&#34;default&#34;,&#34;key&#34;:&#34;flag1&#34;,&#34;kind&#34;:&#34;feature&#34;,&#34;reason&#34;:{&#34;kind&#34;:&#34;FALLTHROUGH&#34;},&#34;userKey&#34;:&#34;user-key&#34;,&#34;value&#34;:&#34;value1&#34;,&#34;variation&#34;:1,&#34;version&#34;:0}, {&#34;endDate&#34;:1643052851404,&#34;features&#34;:{&#34;flag1&#34;:{&#34;counters&#34;:[{&#34;count&#34;:1,&#34;value&#34;:&#34;value1&#34;,&#34;variation&#34;:1,&#34;version&#34;:0}],&#34;default&#34;:&#34;default&#34;},&#34;flag2&#34;:{&#34;counters&#34;:[{&#34;count&#34;:1,&#34;value&#34;:&#34;ok2&#34;,&#34;variation&#34;:2,&#34;version&#34;:0}]},&#34;flag3&#34;:{&#34;counters&#34;:[{&#34;count&#34;:1,&#34;value&#34;:&#34;ok3&#34;,&#34;variation&#34;:3,&#34;version&#34;:0}]}},&#34;kind&#34;:&#34;summary&#34;,&#34;startDate&#34;:1643052851404}]" type="">[2022-01-24 11:34:11.399] setting SDK data to: {&#34;flags&#34;:{&#34;flag1&#34;:{&#34;key&#34;:&#34;flag1&#34;,&#34;on&#34;:true,&#34;prerequisites&#34;:[{&#34;key&#34;:&#34;flag2&#34;,&#34;variation&#34;:2}],&#34;targets&#34;:[],&#34;rules&#34;:[],&#34;fallthrough&#34;:{&#34;variation&#34;:1},&#34;offVariation&#34;:0,&#34;variations&#34;:[&#34;a&#34;,&#34;value1&#34;],&#34;clientSide&#34;:false,&#34;salt&#34;:&#34;&#34;,&#34;trackEvents&#34;:true,&#34;trackEventsFallthrough&#34;:false,&#34;debugEventsUntilDate&#34;:null,&#34;version&#34;:0,&#34;deleted&#34;:false},&#34;flag2&#34;:{&#34;key&#34;:&#34;flag2&#34;,&#34;on&#34;:true,&#34;prerequisites&#34;:[{&#34;key&#34;:&#34;flag3&#34;,&#34;variation&#34;:3}],&#34;targets&#34;:[{&#34;variation&#34;:2,&#34;values&#34;:[&#34;user-key&#34;]}],&#34;rules&#34;:[],&#34;fallthrough&#34;:{&#34;variation&#34;:0},&#34;offVariation&#34;:0,&#34;variations&#34;:[&#34;a&#34;,&#34;b&#34;,&#34;ok2&#34;],&#34;clientSide&#34;:false,&#34;salt&#34;:&#34;&#34;,&#34;trackEvents&#34;:true,&#34;trackEventsFallthrough&#34;:false,&#34;debugEventsUntilDate&#34;:null,&#34;version&#34;:0,&#34;deleted&#34;:false},&#34;flag3&#34;:{&#34;key&#34;:&#34;flag3&#34;,&#34;on&#34;:true,&#34;prerequisites&#34;:[],&#34;targets&#34;:[],&#34;rules&#34;:[{&#34;variation&#34;:3,&#34;id&#34;:&#34;rule1&#34;,&#34;clauses&#34;:[{&#34;attribute&#34;:&#34;key&#34;,&#34;op&#34;:&#34;in&#34;,&#34;values&#34;:[&#34;user-key&#34;],&#34;negate&#34;:false}],&#34;trackEvents&#34;:false}],&#34;fallthrough&#34;:{&#34;variation&#34;:0},&#34;offVariation&#34;:0,&#34;variations&#34;:[&#34;a&#34;,&#34;b&#34;,&#34;c&#34;,&#34;ok3&#34;],&#34;clientSide&#34;:false,&#34;salt&#34;:&#34;&#34;,&#34;trackEvents&#34;:true,&#34;trackEventsFallthrough&#34;:false,&#34;debugEventsUntilDate&#34;:null,&#34;version&#34;:0,&#34;deleted&#34;:false}},&#34;segments&#34;:{}}&#xA;[2022-01-24 11:34:11.399] Creating test service entity (SDK client) with parameters: {&#34;configuration&#34;:{&#34;credential&#34;:&#34;test-sdk-key&#34;,&#34;streaming&#34;:{&#34;baseUri&#34;:&#34;http://localhost:8111/endpoints/15&#34;},&#34;events&#34;:{&#34;baseUri&#34;:&#34;http://localhost:8111/endpoints/16&#34;,&#34;capacity&#34;:null,&#34;enableDiagnostics&#34;:false,&#34;flushIntervalMs&#34;:1000000}},&#34;tag&#34;:&#34;events/feature prerequisite events/with reason&#34;}&#xA;[2022-01-24 11:34:11.403] sending put event with data: {&#34;data&#34;:{&#34;flags&#34;:{&#34;flag1&#34;:{&#34;key&#34;:&#34;flag1&#34;,&#34;on&#34;:true,&#34;prerequisites&#34;:[{&#34;key&#34;:&#34;flag2&#34;,&#34;variation&#34;:2}],&#34;targets&#34;:[],&#34;rules&#34;:[],&#34;fallthrough&#34;:{&#34;variation&#34;:1},&#34;offVariation&#34;:0,&#34;variations&#34;:[&#34;a&#34;,&#34;value1&#34;],&#34;clientSide&#34;:false,&#34;salt&#34;:&#34;&#34;,&#34;trackEvents&#34;:true,&#34;trackEventsFallthrough&#34;:false,&#34;debugEventsUntilDate&#34;:null,&#34;version&#34;:0,&#34;deleted&#34;:false},&#34;flag2&#34;:{&#34;key&#34;:&#34;flag2&#34;,&#34;on&#34;:true,&#34;prerequisites&#34;:[{&#34;key&#34;:&#34;flag3&#34;,&#34;variation&#34;:3}],&#34;targets&#34;:[{&#34;variation&#34;:2,&#34;values&#34;:[&#34;user-key&#34;]}],&#34;rules&#34;:[],&#34;fallthrough&#34;:{&#34;variation&#34;:0},&#34;offVariation&#34;:0,&#34;variations&#34;:[&#34;a&#34;,&#34;b&#34;,&#34;ok2&#34;],&#34;clientSide&#34;:false,&#34;salt&#34;:&#34;&#34;,&#34;trackEvents&#34;:true,&#34;trackEventsFallthrough&#34;:false,&#34;debugEventsUntilDate&#34;:null,&#34;version&#34;:0,&#34;deleted&#34;:false},&#34;flag3&#34;:{&#34;key&#34;:&#34;flag3&#34;,&#34;on&#34;:true,&#34;prerequisites&#34;:[],&#34;targets&#34;:[],&#34;rules&#34;:[{&#34;variation&#34;:3,&#34;id&#34;:&#34;rule1&#34;,&#34;clauses&#34;:[{&#34;attribute&#34;:&#34;key&#34;,&#34;op&#34;:&#34;in&#34;,&#34;values&#34;:[&#34;user-key&#34;],&#34;negate&#34;:false}],&#34;trackEvents&#34;:false}],&#34;fallthrough&#34;:{&#34;variation&#34;:0},&#34;offVariation&#34;:0,&#34;variations&#34;:[&#34;a&#34;,&#34;b&#34;,&#34;c&#34;,&#34;ok3&#34;],&#34;clientSide&#34;:false,&#34;salt&#34;:&#34;&#34;,&#34;trackEvents&#34;:true,&#34;trackEventsFallthrough&#34;:false,&#34;debugEventsUntilDate&#34;:null,&#34;version&#34;:0,&#34;deleted&#34;:false}},&#34;segments&#34;:{}}}&#xA;[2022-01-24 11:34:11.403] Sending command: {&#34;command&#34;:&#34;evaluate&#34;,&#34;evaluate&#34;:{&#34;flagKey&#34;:&#34;flag1&#34;,&#34;user&#34;:{&#34;key&#34;:&#34;user-key&#34;},&#34;valueType&#34;:&#34;string&#34;,&#34;defaultValue&#34;:&#34;default&#34;,&#34;detail&#34;:true}}&#xA;[2022-01-24 11:34:11.404] Response: {&#34;value&#34;:&#34;value1&#34;,&#34;variationIndex&#34;:1,&#34;reason&#34;:{&#34;kind&#34;:&#34;FALLTHROUGH&#34;}}&#xA;[2022-01-24 11:34:11.404] Sending command: {&#34;command&#34;:&#34;flushEvents&#34;}&#xA;[2022-01-24 11:34:11.406] received POST /bulk&#xA;[2022-01-24 11:34:11.406] received 5 events&#xA;[2022-01-24 11:34:11.406]     {&#34;creationDate&#34;:1643052851404,&#34;kind&#34;:&#34;index&#34;,&#34;user&#34;:{&#34;key&#34;:&#34;user-key&#34;}}&#xA;[2022-01-24 11:34:11.406]     {&#34;creationDate&#34;:1643052851404,&#34;key&#34;:&#34;flag3&#34;,&#34;kind&#34;:&#34;feature&#34;,&#34;prereqOf&#34;:&#34;flag2&#34;,&#34;reason&#34;:{&#34;kind&#34;:&#34;RULE_MATCH&#34;,&#34;ruleId&#34;:&#34;rule1&#34;,&#34;ruleIndex&#34;:0},&#34;userKey&#34;:&#34;user-key&#34;,&#34;value&#34;:&#34;ok3&#34;,&#34;variation&#34;:3,&#34;version&#34;:0}&#xA;[2022-01-24 11:34:11.406]     {&#34;creationDate&#34;:1643052851404,&#34;key&#34;:&#34;flag2&#34;,&#34;kind&#34;:&#34;feature&#34;,&#34;prereqOf&#34;:&#34;flag1&#34;,&#34;reason&#34;:{&#34;kind&#34;:&#34;TARGET_MATCH&#34;},&#34;userKey&#34;:&#34;user-key&#34;,&#34;value&#34;:&#34;ok2&#34;,&#34;variation&#34;:2,&#34;version&#34;:0}&#xA;[2022-01-24 11:34:11.406]     {&#34;creationDate&#34;:1643052851404,&#34;default&#34;:&#34;default&#34;,&#34;key&#34;:&#34;flag1&#34;,&#34;kind&#34;:&#34;feature&#34;,&#34;reason&#34;:{&#34;kind&#34;:&#34;FALLTHROUGH&#34;},&#34;userKey&#34;:&#34;user-key&#34;,&#34;value&#34;:&#34;value1&#34;,&#34;variation&#34;:1,&#34;version&#34;:0}&#xA;[2022-01-24 11:34:11.406]     {&#34;endDate&#34;:1643052851404,&#34;features&#34;:{&#34;flag1&#34;:{&#34;counters&#34;:[{&#34;count&#34;:1,&#34;value&#34;:&#34;value1&#34;,&#34;variation&#34;:1,&#34;version&#34;:0}],&#34;default&#34;:&#34;default&#34;},&#34;flag2&#34;:{&#34;counters&#34;:[{&#34;count&#34;:1,&#34;value&#34;:&#34;ok2&#34;,&#34;variation&#34;:2,&#34;version&#34;:0}]},&#34;flag3&#34;:{&#34;counters&#34;:[{&#34;count&#34;:1,&#34;value&#34;:&#34;ok3&#34;,&#34;variation&#34;:3,&#34;version&#34;:0}]}},&#34;kind&#34;:&#34;summary&#34;,&#34;startDate&#34;:1643052851404}&#xA;[2022-01-24 11:34:11.407] Closing http://localhost:8000/clients/616&#xA;[2022-01-24 11:34:11.407] End of stream request</failure>
    </testcase>
    <testcase classname="" name="events/experimentation" time="0.015"></testcase>
    <testcase classname="" name="events/experimentation/experiment in rule" time="0.007"></testcase>
    <testcase classname="" name="events/experimentation/experiment in fallthrough" time="0.007"></testcase>
    <testcase classname="" name="events/identify events" time="0.011"></testcase>
    <testcase classname="" name="events/identify events/normal user" time="0.001"></testcase>
    <testcase classname="" name="events/identify events/user with empty key generates no event" time="0.002">
      <failure message="received events when none were expected&#xA;Messages:   &#x9;events: [{&#34;user&#34;:{&#34;key&#34;:&#34;&#34;,&#34;name&#34;:&#34;has a name but not a key&#34;},&#34;kind&#34;:&#34;identify&#34;,&#34;creationDate&#34;:1643052851429,&#34;key&#34;:&#34;&#34;}]&#xA;  Error trace:&#xA;    testapi_sdk_events.go:77&#xA;    server_side_events_identify.go:39" type="">[2022-01-24 11:34:11.429] Sending command: {&#34;command&#34;:&#34;identifyEvent&#34;,&#34;identifyEvent&#34;:{&#34;user&#34;:{&#34;key&#34;:&#34;&#34;,&#34;name&#34;:&#34;has a name but not a key&#34;}}}&#xA;[2022-01-24 11:34:11.429] Sending command: {&#34;command&#34;:&#34;flushEvents&#34;}</failure>
    </testcase>
    <testcase classname="" name="events/identify events/identify event makes index event for same user unnecessary" time="0.002"></testcase>
    <testcase classname="" name="events/custom events" time="0.061"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters" time="0.053"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=null" time="0.002"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=false" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=true" time="0.002"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=0" time="0.002"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=1000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=1000.5" time="0.002"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=&#34;&#34;" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=&#34;abc&#34;" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=[1,2]" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data={&#34;property&#34;:true}" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=null, omitNullData" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=null, metricValue=0.000000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=false, metricValue=0.000000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=true, metricValue=0.000000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=0, metricValue=0.000000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=1000, metricValue=0.000000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=1000.5, metricValue=0.000000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=&#34;&#34;, metricValue=0.000000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=&#34;abc&#34;, metricValue=0.000000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=[1,2], metricValue=0.000000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data={&#34;property&#34;:true}, metricValue=0.000000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=null, omitNullData, metricValue=0.000000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=null, metricValue=-1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=false, metricValue=-1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=true, metricValue=-1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=0, metricValue=-1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=1000, metricValue=-1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=1000.5, metricValue=-1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=&#34;&#34;, metricValue=-1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=&#34;abc&#34;, metricValue=-1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=[1,2], metricValue=-1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data={&#34;property&#34;:true}, metricValue=-1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=null, omitNullData, metricValue=-1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=null, metricValue=1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=false, metricValue=1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=true, metricValue=1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=0, metricValue=1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=1000, metricValue=1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=1000.5, metricValue=1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=&#34;&#34;, metricValue=1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=&#34;abc&#34;, metricValue=1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=[1,2], metricValue=1.500000" time="0.002"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data={&#34;property&#34;:true}, metricValue=1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/data and metricValue parameters/data=null, omitNullData, metricValue=1.500000" time="0.001"></testcase>
    <testcase classname="" name="events/custom events/index events are created for new users if not inlined" time="0.009"></testcase>
    <testcase classname="" name="events/alias events" time="0.014"></testcase>
    <testcase classname="" name="events/alias events/from non-anonymous to non-anonymous" time="0.003">
      <failure message="expected slice with 1 item(s), got 2 item(s)&#xA;full value was: [{&#34;creationDate&#34;:1643052851501,&#34;kind&#34;:&#34;index&#34;,&#34;user&#34;:{&#34;key&#34;:&#34;doServerSideAliasEventTests.1643052851495.2&#34;,&#34;name&#34;:&#34;Lucy&#34;}}, {&#34;contextKind&#34;:&#34;user&#34;,&#34;creationDate&#34;:1643052851501,&#34;key&#34;:&#34;doServerSideAliasEventTests.1643052851495.2&#34;,&#34;kind&#34;:&#34;alias&#34;,&#34;previousContextKind&#34;:&#34;user&#34;,&#34;previousKey&#34;:&#34;doServerSideAliasEventTests.1643052851495.1&#34;}]" type="">[2022-01-24 11:34:11.501] Sending command: {&#34;command&#34;:&#34;aliasEvent&#34;,&#34;aliasEvent&#34;:{&#34;user&#34;:{&#34;key&#34;:&#34;doServerSideAliasEventTests.1643052851495.2&#34;,&#34;name&#34;:&#34;Lucy&#34;},&#34;previousUser&#34;:{&#34;key&#34;:&#34;doServerSideAliasEventTests.1643052851495.1&#34;,&#34;name&#34;:&#34;Mina&#34;}}}&#xA;[2022-01-24 11:34:11.501] Sending command: {&#34;command&#34;:&#34;flushEvents&#34;}</failure>
    </testcase>
    <testcase classname="" name="events/alias events/from non-anonymous to anonymous" time="0.002">
      <failure message="expected slice with 1 item(s), got 2 item(s)&#xA;full value was: [{&#34;creationDate&#34;:1643052851504,&#34;kind&#34;:&#34;index&#34;,&#34;user&#34;:{&#34;anonymous&#34;:true,&#34;key&#34;:&#34;doServerSideAliasEventTests.1643052851495.4&#34;}}, {&#34;contextKind&#34;:&#34;anonymousUser&#34;,&#34;creationDate&#34;:1643052851504,&#34;key&#34;:&#34;doServerSideAliasEventTests.1643052851495.4&#34;,&#34;kind&#34;:&#34;alias&#34;,&#34;previousContextKind&#34;:&#34;user&#34;,&#34;previousKey&#34;:&#34;doServerSideAliasEventTests.1643052851495.3&#34;}]" type="">[2022-01-24 11:34:11.503] Sending command: {&#34;command&#34;:&#34;aliasEvent&#34;,&#34;aliasEvent&#34;:{&#34;user&#34;:{&#34;key&#34;:&#34;doServerSideAliasEventTests.1643052851495.4&#34;,&#34;anonymous&#34;:true},&#34;previousUser&#34;:{&#34;key&#34;:&#34;doServerSideAliasEventTests.1643052851495.3&#34;,&#34;name&#34;:&#34;Mina&#34;}}}&#xA;[2022-01-24 11:34:11.504] Sending command: {&#34;command&#34;:&#34;flushEvents&#34;}</failure>
    </testcase>
    <testcase classname="" name="events/alias events/from anonymous to non-anonymous" time="0.001">
      <failure message="expected slice with 1 item(s), got 2 item(s)&#xA;full value was: [{&#34;creationDate&#34;:1643052851505,&#34;kind&#34;:&#34;index&#34;,&#34;user&#34;:{&#34;key&#34;:&#34;doServerSideAliasEventTests.1643052851495.6&#34;,&#34;name&#34;:&#34;Lucy&#34;}}, {&#34;contextKind&#34;:&#34;user&#34;,&#34;creationDate&#34;:1643052851505,&#34;key&#34;:&#34;doServerSideAliasEventTests.1643052851495.6&#34;,&#34;kind&#34;:&#34;alias&#34;,&#34;previousContextKind&#34;:&#34;anonymousUser&#34;,&#34;previousKey&#34;:&#34;doServerSideAliasEventTests.1643052851495.5&#34;}]" type="">[2022-01-24 11:34:11.505] Sending command: {&#34;command&#34;:&#34;aliasEvent&#34;,&#34;aliasEvent&#34;:{&#34;user&#34;:{&#34;key&#34;:&#34;doServerSideAliasEventTests.1643052851495.6&#34;,&#34;name&#34;:&#34;Lucy&#34;},&#34;previousUser&#34;:{&#34;key&#34;:&#34;doServerSideAliasEventTests.1643052851495.5&#34;,&#34;anonymous&#34;:true}}}&#xA;[2022-01-24 11:34:11.505] Sending command: {&#34;command&#34;:&#34;flushEvents&#34;}</failure>
    </testcase>
    <testcase classname="" name="events/alias events/from anonymous to anonymous" time="0.002">
      <failure message="expected slice with 1 item(s), got 2 item(s)&#xA;full value was: [{&#34;creationDate&#34;:1643052851507,&#34;kind&#34;:&#34;index&#34;,&#34;user&#34;:{&#34;anonymous&#34;:true,&#34;key&#34;:&#34;doServerSideAliasEventTests.1643052851495.8&#34;}}, {&#34;contextKind&#34;:&#34;anonymousUser&#34;,&#34;creationDate&#34;:1643052851507,&#34;key&#34;:&#34;doServerSideAliasEventTests.1643052851495.8&#34;,&#34;kind&#34;:&#34;alias&#34;,&#34;previousContextKind&#34;:&#34;anonymousUser&#34;,&#34;previousKey&#34;:&#34;doServerSideAliasEventTests.1643052851495.7&#34;}]" type="">[2022-01-24 11:34:11.506] Sending command: {&#34;command&#34;:&#34;aliasEvent&#34;,&#34;aliasEvent&#34;:{&#34;user&#34;:{&#34;key&#34;:&#34;doServerSideAliasEventTests.1643052851495.8&#34;,&#34;anonymous&#34;:true},&#34;previousUser&#34;:{&#34;key&#34;:&#34;doServerSideAliasEventTests.1643052851495.7&#34;,&#34;anonymous&#34;:true}}}&#xA;[2022-01-24 11:34:11.507] Sending command: {&#34;command&#34;:&#34;flushEvents&#34;}</failure>
    </testcase>
    <testcase classname="" name="events/user properties" time="0.196"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false" time="0.010"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false/feature event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false/identify event" time="0.001"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false/custom event" time="0.001"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, user-private=[lastName]" time="0.009"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, user-private=[lastName]/feature event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, user-private=[lastName]/identify event" time="0.001"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, user-private=[lastName]/custom event" time="0.001"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, globally-private=[firstName]" time="0.011"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, globally-private=[firstName]/feature event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, globally-private=[firstName]/identify event" time="0.001"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, globally-private=[firstName]/custom event" time="0.001"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, globally-private=[firstName], user-private=[lastName]" time="0.012"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, globally-private=[firstName], user-private=[lastName]/feature event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, globally-private=[firstName], user-private=[lastName]/identify event" time="0.001"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, globally-private=[firstName], user-private=[lastName]/custom event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, allAttributesPrivate=true" time="0.015"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, allAttributesPrivate=true/feature event" time="0.003"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, allAttributesPrivate=true/identify event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, allAttributesPrivate=true/custom event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, allAttributesPrivate=true, user-private=[lastName]" time="0.014"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, allAttributesPrivate=true, user-private=[lastName]/feature event" time="0.003"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, allAttributesPrivate=true, user-private=[lastName]/identify event" time="0.004"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, allAttributesPrivate=true, user-private=[lastName]/custom event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, allAttributesPrivate=true, globally-private=[firstName]" time="0.011"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, allAttributesPrivate=true, globally-private=[firstName]/feature event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, allAttributesPrivate=true, globally-private=[firstName]/identify event" time="0.001"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, allAttributesPrivate=true, globally-private=[firstName]/custom event" time="0.001"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, allAttributesPrivate=true, globally-private=[firstName], user-private=[lastName]" time="0.014"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, allAttributesPrivate=true, globally-private=[firstName], user-private=[lastName]/feature event" time="0.003"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, allAttributesPrivate=true, globally-private=[firstName], user-private=[lastName]/identify event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=false, allAttributesPrivate=true, globally-private=[firstName], user-private=[lastName]/custom event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true" time="0.009"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true/feature event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true/identify event" time="0.001"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true/custom event" time="0.001"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, user-private=[lastName]" time="0.015"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, user-private=[lastName]/feature event" time="0.003"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, user-private=[lastName]/identify event" time="0.003"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, user-private=[lastName]/custom event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, globally-private=[firstName]" time="0.012"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, globally-private=[firstName]/feature event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, globally-private=[firstName]/identify event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, globally-private=[firstName]/custom event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, globally-private=[firstName], user-private=[lastName]" time="0.011"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, globally-private=[firstName], user-private=[lastName]/feature event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, globally-private=[firstName], user-private=[lastName]/identify event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, globally-private=[firstName], user-private=[lastName]/custom event" time="0.001"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, allAttributesPrivate=true" time="0.010"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, allAttributesPrivate=true/feature event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, allAttributesPrivate=true/identify event" time="0.001"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, allAttributesPrivate=true/custom event" time="0.001"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, allAttributesPrivate=true, user-private=[lastName]" time="0.014"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, allAttributesPrivate=true, user-private=[lastName]/feature event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, allAttributesPrivate=true, user-private=[lastName]/identify event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, allAttributesPrivate=true, user-private=[lastName]/custom event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, allAttributesPrivate=true, globally-private=[firstName]" time="0.014"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, allAttributesPrivate=true, globally-private=[firstName]/feature event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, allAttributesPrivate=true, globally-private=[firstName]/identify event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, allAttributesPrivate=true, globally-private=[firstName]/custom event" time="0.001"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, allAttributesPrivate=true, globally-private=[firstName], user-private=[lastName]" time="0.012"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, allAttributesPrivate=true, globally-private=[firstName], user-private=[lastName]/feature event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, allAttributesPrivate=true, globally-private=[firstName], user-private=[lastName]/identify event" time="0.002"></testcase>
    <testcase classname="" name="events/user properties/inlineUsers=true, allAttributesPrivate=true, globally-private=[firstName], user-private=[lastName]/custom event" time="0.002"></testcase>
    <testcase classname="" name="events/event capacity" time="0.037"></testcase>
    <testcase classname="" name="events/event capacity/capacity is enforced" time="0.010"></testcase>
    <testcase classname="" name="events/event capacity/buffer is reset after flush" time="0.012"></testcase>
    <testcase classname="" name="events/event capacity/summary event is still included even if buffer was full" time="0.010"></testcase>
  </testsuite>
  <testsuite tests="1" failures="0" time="0.000" name="SDK contract tests: streaming">
    <properties>
      <property name="tests.service.info" value="{&#34;capabilities&#34;:[&#34;server-side&#34;,&#34;strongly-typed&#34;,&#34;all-flags-client-side-only&#34;,&#34;all-flags-details-only-for-tracked-flags&#34;,&#34;all-flags-with-reasons&#34;]}"></property>
      <property name="tests.filter.mustMatch" value="&#34;events&#34;"></property>
      <property name="tests.filter.mustNotMatch" value=""></property>
    </properties>
    <testcase classname="" name="streaming" time="0.000">
      <skipped message="excluded by filter parameters"></skipped>
    </testcase>
  </testsuite>
</testsuites>
