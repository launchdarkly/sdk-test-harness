---
name: prerequisites

constants:
  USER: { key: "user-key" }
  IS_MATCH:
    value: true
    variationIndex: 0
    reason: { kind: "RULE_MATCH", ruleIndex: 0, ruleId: "ruleid" }
  IS_NOT_MATCH:
    value: false
    variationIndex: 1
    reason: { kind: "FALLTHROUGH" }
  FAILED_PREREQ1:
    value: false
    variationIndex: 1
    reason: { "kind": "PREREQUISITE_FAILED", "prerequisiteKey": "prereq1" }
  FAILED_PREREQ2:
    value: false
    variationIndex: 1
    reason: { "kind": "PREREQUISITE_FAILED", "prerequisiteKey": "prereq2" }
  FAILED_PREREQ3:
    value: false
    variationIndex: 1
    reason: { "kind": "PREREQUISITE_FAILED", "prerequisiteKey": "prereq3" }
  boolean_flag_base: &boolean_flag_base
    variations: [ true, false ]
    offVariation: 1
    fallthrough: { variation: 1 }

sdkData:
  flags:
    prereq1:
      <<: *boolean_flag_base
      on: true
      rules:
        - id: ruleid
          variation: 0
          clauses:
            - { attribute: "prereq1-should-match", op: "in", values: [ true ] }

    prereq2:
      <<: *boolean_flag_base
      on: true
      rules:
        - id: ruleid
          variation: 0
          clauses:
            - { attribute: "prereq2-should-match", op: "in", values: [ true ] }

    prereq3:
      <<: *boolean_flag_base
      on: true
      prerequisites:
        - { key: "prereq1", variation: 0 }
        - { key: "prereq2", variation: 0 }
      rules:
        - id: ruleid
          variation: 0
          clauses:
            - { attribute: "prereq3-should-match", op: "in", values: [ true ] }

    prereq-that-returns-true-but-is-off:
      on: false
      variations: [ true, false ]
      offVariation: 0

    flag-with-prereq1:
      <<: *boolean_flag_base
      on: true
      prerequisites:
        - { key: "prereq1", variation: 0 }
      rules:
        - id: ruleid
          variation: 0
          clauses:
            - { attribute: "flag-rule-should-match", op: "in", values: [ true ] }

    flag-with-prereq1-and-prereq2:
      <<: *boolean_flag_base
      on: true
      prerequisites:
        - { key: "prereq1", variation: 0 }
        - { key: "prereq2", variation: 0 }
      rules:
        - id: ruleid
          variation: 0
          clauses:
            - { attribute: "flag-rule-should-match", op: "in", values: [ true ] }

    flag-with-prereq3:
      <<: *boolean_flag_base
      on: true
      prerequisites:
        - { key: "prereq3", variation: 0 }
      rules:
        - id: ruleid
          variation: 0
          clauses:
            - { attribute: "flag-rule-should-match", op: "in", values: [ true ] }

    flag-with-unknown-prereq:
      <<: *boolean_flag_base
      on: true
      prerequisites:
        - { key: "prereq1", variation: 0 }
        - { key: "prereq99", variation: 0 }

    flag-with-prereq1-and-special-off-variation:
      on: true
      variations: [ "off", "fall", "match" ]
      offVariation: 0
      fallthrough: { variation: 1 }
      prerequisites:
        - { key: "prereq1", variation: 0 }
      rules:
        - id: ruleid
          variation: 0
          clauses:
            - { attribute: "flag-rule-should-match", op: "in", values: [ true ] }

    flag-with-prereq-that-returns-true-but-is-off:
      <<: *boolean_flag_base
      on: true
      prerequisites:
        - { key: "prereq-that-returns-true-but-is-off", variation: 0 }
      rules:
        - id: ruleid
          variation: 0
          clauses:
            - { attribute: "flag-rule-should-match", op: "in", values: [ true ] }

evaluations:
  - name: prerequisite succeeds, flag rule matches
    flagKey: flag-with-prereq1
    user:
      key: "user-key"
      custom:
        prereq1-should-match: true
        flag-rule-should-match: true
    default: false
    expect: <IS_MATCH>

  - name: prerequisite succeeds, flag rule does not match
    flagKey: flag-with-prereq1
    user:
      key: "user-key"
      custom:
        prereq1-should-match: true
        flag-rule-should-match: false
    default: false
    expect: <IS_NOT_MATCH>

  - name: prerequisite fails
    flagKey: flag-with-prereq1
    user:
      key: "user-key"
      custom:
        prereq1-should-match: false
        flag-rule-should-match: true
    default: false
    expect: <FAILED_PREREQ1>

  - name: two prerequisites, both succeed, flag rule matches
    flagKey: flag-with-prereq1-and-prereq2
    user:
      key: "user-key"
      custom:
        prereq1-should-match: true
        prereq2-should-match: true
        flag-rule-should-match: true
    default: false
    expect: <IS_MATCH>

  - name: two prerequisites, both valid, flag rule matches
    flagKey: flag-with-prereq1-and-prereq2
    user:
      key: "user-key"
      custom:
        prereq1-should-match: true
        prereq2-should-match: true
        flag-rule-should-match: true
    default: false
    expect: <IS_MATCH>

  - name: two prerequisites, second fails
    flagKey: flag-with-prereq1-and-prereq2
    user:
      key: "user-key"
      custom:
        prereq1-should-match: true
        prereq2-should-match: false
        flag-rule-should-match: true
    default: false
    expect: <FAILED_PREREQ2>

  - name: nested prerequisites, all succeed
    flagKey: flag-with-prereq3
    user:
      key: "user-key"
      custom:
        prereq1-should-match: true
        prereq2-should-match: true
        prereq3-should-match: true
        flag-rule-should-match: true
    default: false
    expect: <IS_MATCH>

  - name: nested prerequisites, transitive one fails
    flagKey: flag-with-prereq3
    user:
      key: "user-key"
      custom:
        prereq1-should-match: true
        prereq2-should-match: false
        prereq3-should-match: true
        flag-rule-should-match: true
    default: false
    expect: <FAILED_PREREQ3>

  - name: prerequisite flag not found
    flagKey: flag-with-unknown-prereq
    user:
      key: "user-key"
      custom:
        prereq1-should-match: true
        flag-rule-should-match: true
    default: false
    expect:
      value: false
      variationIndex: 1
      reason: { "kind": "PREREQUISITE_FAILED", "prerequisiteKey": "prereq99" }

  - name: failed prerequisite always returns off variation
    flagKey: flag-with-prereq1-and-special-off-variation
    user:
      key: "user-key"
      custom:
        prereq1-should-match: false
        flag-rule-should-match: true
    expect:
      value: "off"
      variationIndex: 0
      reason: { "kind": "PREREQUISITE_FAILED", "prerequisiteKey": "prereq1" }

  - name: prerequisite fails regardless of variation if it is off
    flagKey: flag-with-prereq-that-returns-true-but-is-off
    user:
      key: "user-key"
      custom:
        flag-rule-should-match: true
    expect:
      value: false
      variationIndex: 1
      reason: { "kind": "PREREQUISITE_FAILED", "prerequisiteKey": "prereq-that-returns-true-but-is-off" }
